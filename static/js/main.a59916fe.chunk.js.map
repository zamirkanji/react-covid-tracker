{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCsDpJC,EAjDD,SAAC,GAA4D,IAAD,IAAzDC,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WAEnD,OAAKH,EAID,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAItE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YACzE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,IAAKC,UAAU,OAItE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SACzE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,IAAKC,UAAU,OAInE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,sCAtCT,e,yBCNTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACjBC,EAAgBJ,EAEhBE,IACAE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJnB,kBAQoDG,IAAMC,IAAIF,GAR9D,2BAQTnC,KAAQC,EARC,EAQDA,UAAWC,EARV,EAQUA,UAAWC,EARrB,EAQqBA,OAAQC,EAR7B,EAQ6BA,WAR7B,kBAUV,CACHH,YACAC,YACAC,SACAC,eAda,kCAiBjBkC,QAAQC,IAAR,MAjBiB,0DAAH,sDAqBTC,EAAc,uCAAG,gCAAAN,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KACFyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC1C1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eANE,kBAQfL,GARe,yFAAH,qDAcdM,EAAc,uCAAG,8BAAAb,EAAA,+EAEgBE,IAAMC,IAAN,UAAaN,EAAb,eAFhB,uBAENiB,EAFM,EAEdhD,KAAQgD,UAFM,kBAGfA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SAHpB,gCAKtBX,QAAQC,IAAR,MALsB,yDAAH,qD,yBCyBZW,EA5DD,SAAC,GAAyD,IAAD,IAAtDlD,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAU8B,EAAc,EAAdA,QAAc,EACjCkB,mBAAS,IADwB,mBAC5DR,EAD4D,KACjDS,EADiD,KAGnEC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAIdc,KACD,IAEH,IAAMC,EACFZ,EAAUa,OAEF,kBAAC,IAAD,CAAMxD,KAAM,CACRyD,OAAQd,EAAUD,KAAI,qBAAGG,QACzBa,SAAU,CAAC,CACP1D,KAAM2C,EAAUD,KAAI,qBAAGzC,aACvB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GAEV,CACI7D,KAAM2C,EAAUD,KAAI,qBAAGvC,UACvBwD,MAAO,SACPC,YAAa,MACbE,gBAAiB,uBACjBD,MAAM,OAGd,KAGNE,EACF9D,EAEQ,kBAAC,IAAD,CACID,KAAM,CACFyD,OAAQ,CAAC,WAAD,sBACRC,SAAU,CAAC,CACPC,MAAM,SACNG,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClE9D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAGxDsC,QAAS,CACLC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsBnC,OAG1D,KAGZ,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAU8B,EAAWR,I,mCChCnBc,EArBO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACCnB,mBAAS,IADV,mBACxCoB,EADwC,KACtBC,EADsB,KAW/C,OARAnB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbsC,EADa,SACazB,IADb,6EAAH,qDAGdO,KACD,CAACkB,IAEJlC,QAAQC,IAAIQ,GAER,kBAAC0B,EAAA,EAAD,CAAapE,UAAWC,IAAOmE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOP,EAAoBO,EAAEC,OAAOpD,SACxE,4BAAQA,MAAM,UAAd,UACC6C,EAAiB7B,KAAI,SAACT,EAAS8C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGrD,MAAOO,GAAUA,S,kCCoBxEgD,E,4MA7BXC,MAAQ,CACJlF,KAAM,GACNiC,QAAS,I,EAQbqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZkD,EADY,OAElB,EAAKC,SAAS,CAAEpF,KAAMmF,EAAalD,QAASA,IAF1B,2C,wPAJQD,I,OAApBmD,E,OACNE,KAAKD,SAAS,CAAEpF,KAAMmF,I,qIAQhB,IAAD,EACqBE,KAAKH,MAAvBlF,EADH,EACGA,KAAMiC,EADT,EACSA,QAEd,OACI,yBAAK5B,UAAWC,IAAOC,WACnB,yBAAKF,UAAWC,IAAOgF,MAAOC,IAAKC,IAAaC,IAAI,aACpD,kBAAC,EAAD,CAAOzF,KAAMA,IACb,kBAAC,EAAD,CAAesE,oBAAqBe,KAAKf,sBACzC,kBAAC,EAAD,CAAOtE,KAAMA,EAAMiC,QAASA,S,GAxB1ByD,IAAMC,WCPxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDlG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.a59916fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    // console.log(confirmed);\n    if (!confirmed) {\n        return \"Loading... \";\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\">\n\n                            </CountUp>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Active Cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\">\n\n                            </CountUp>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\">\n\n                            </CountUp>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Deaths from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\nimport { DialogTitle } from '@material-ui/core';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n        return {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate\n        };\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }))\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length ?\n            (\n                <Line data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: \"Infected\",\n                        borderColor: \"#3333ff\",\n                        fill: true\n                    },\n                    {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: \"Deaths\",\n                        borderColor: \"red\",\n                        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n                        fill: true\n                    }],\n                }} />\n            ) : null\n    )\n\n    const barChart = (\n        confirmed ?\n            (\n                <Bar\n                    data={{\n                        labels: [`Infected`, `Recovered`, `Deaths`],\n                        datasets: [{\n                            label: `People`,\n                            backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        title: { display: true, text: `Current state in ${country}` }\n                    }}\n                />\n            ) : null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries])\n\n    console.log(fetchCountries);\n    return (\n        <FormControl className={styles.FormControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"global\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\n// import Cards from \"./components/Cards/Cards\";\n// import Chart from \"./components/Chart/Chart\";\n// import CountryPicker from \"./components/CountryPicker/CountryPicker\";\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from \"./images/image.png\";\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: \"\",\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({ data: fetchedData, country: country });\n    }\n\n    render() {\n        const { data, country } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt=\"covid-19\" />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}